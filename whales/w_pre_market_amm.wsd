@startuml W-Pre-market AMM System

' Define participants
actor "LP Provider" as LPProvider
actor "Trader" as Trader
participant "W-Pre-market AMM" as AMM
database "Liquidity Pool" as Pool
participant "Price Calculator" as Calculator
participant "Token Minter" as Minter
participant "Fee Manager" as FeeManager
database "Fee Trackers" as FeeTrackers
participant "Settlement Manager" as Settlement
database "LP Position Trackers" as LPTrackers

' Style
skinparam sequence {
    ParticipantBackgroundColor LightBlue
    ActorBackgroundColor LightGreen
    DatabaseBackgroundColor LightPink
    LifeLineColor Gray
    BorderColor Black
}

' Define mathematical formulas as notes
note left of LPProvider
  <b>Key Formulas:</b>
  
  <b>Liquidity:</b>
  L = x / (1/√Pa - 1/√Pb)
  
  <b>At price P:</b>
  x = L · (1/√P - 1/√Pb)
  y = L · (√P - √Pa)
  
  <b>General formula:</b>
  y = x · (√Pb - √Pa) / (1/√Pa - 1/√Pb)
end note

' LP Provider Flow
group LP Provider Adds Liquidity
    LPProvider -> AMM: Add Liquidity (x base token, Pa, Pb)
    activate AMM
    
    AMM -> Calculator: Calculate liquidity parameters
    activate Calculator
    
    Calculator -> Calculator: Calculate L = x / (1/√Pa - 1/√Pb)
    Calculator -> Calculator: Calculate y = x · (√Pb - √Pa) / (1/√Pa - 1/√Pb)
    Calculator --> AMM: Return y (amount of w-token needed)
    deactivate Calculator
    
    AMM -> Minter: Request to mint y w-token
    activate Minter
    Minter --> AMM: Return newly minted w-token
    deactivate Minter
    
    AMM -> Pool: Add x base token + y w-token to pool
    AMM -> Pool: Add x base token as collateral
    AMM -> LPTrackers: Record collateral amount and initial w-token amount
    AMM --> LPProvider: Issue LP tokens representing share of pool
    
    deactivate AMM
end

' Trader Flow - Buy w-tokens
group Trader Buys w-tokens
    Trader -> AMM: Buy w-tokens with x base token
    activate AMM
    
    AMM -> FeeManager: Calculate fee (e.g., 0.3% of x)
    activate FeeManager
    FeeManager --> AMM: Return fee amount
    deactivate FeeManager
    
    AMM -> Calculator: Calculate output amount (with x - fee)
    activate Calculator
    
    Calculator -> Calculator: Calculate current price based on pool ratio
    Calculator -> Calculator: Calculate output w-token based on formula
    Calculator --> AMM: Return output amount of w-token
    deactivate Calculator
    
    AMM -> Pool: Update base token and w-token according to formula
    
    AMM -> FeeManager: Update fee growth trackers
    activate FeeManager
    FeeManager -> FeeTrackers: Record fees for current price range
    FeeManager --> AMM: Confirm fee tracking update
    deactivate FeeManager
    
    AMM --> Trader: Send w-token to trader
    
    deactivate AMM
end

' Trader Flow - Sell w-tokens
group Trader Sells w-tokens
    Trader -> AMM: Sell y w-tokens
    activate AMM
    
    AMM -> Calculator: Calculate output amount
    activate Calculator
    
    Calculator -> Calculator: Calculate current price based on pool ratio
    Calculator -> Calculator: Calculate output base token based on formula
    Calculator --> AMM: Return output amount of base token
    deactivate Calculator
    
    AMM -> Pool: Remove base token and w-token according to formula
    AMM --> Trader: Send base token to trader
    
    deactivate AMM
end

' Add a new flow for fee collection
group LP Provider Collects Fees
    LPProvider -> AMM: Request to collect fees for position (LP token ID)
    activate AMM
    
    AMM -> FeeManager: Calculate uncollected fees for position
    activate FeeManager
    
    FeeManager -> FeeTrackers: Get fee growth since last collection
    FeeManager -> FeeManager: Calculate fees owed based on liquidity share
    FeeManager --> AMM: Return uncollected fees (base token, w-token)
    deactivate FeeManager
    
    AMM -> Pool: Withdraw fee amounts
    AMM --> LPProvider: Send collected fees (base token, w-token)
    
    AMM -> FeeManager: Update position's fee tracking data
    activate FeeManager
    FeeManager -> FeeTrackers: Reset tokens owed, update last fee growth
    FeeManager --> AMM: Confirm update
    deactivate FeeManager
    
    deactivate AMM
end

' Add a new flow for settlement phase
group Enter Settlement Phase (After TGE)
    note over AMM, Settlement: System enters settlement phase after token generation event (TGE)
    
    AMM -> Settlement: Enter settlement phase with real token
    activate Settlement
    Settlement -> Pool: Add real token to pool
    Settlement -> Pool: Set isSettlementPhase = true
    Settlement --> AMM: Confirm settlement phase entered
    deactivate Settlement
end

' Add a new flow for LP Provider withdrawal in settlement phase
group LP Provider Withdraws Liquidity in Settlement Phase
    LPProvider -> AMM: Request to withdraw liquidity (LP token ID)
    activate AMM
    
    AMM -> Settlement: Calculate required token amount
    activate Settlement
    Settlement -> LPTrackers: Get initial w-token amount
    Settlement -> Pool: Get current w-token balance for position
    Settlement -> Settlement: Calculate required token = initial w-token - current w-token
    Settlement --> AMM: Return required token amount
    deactivate Settlement
    
    AMM --> LPProvider: Request required token amount
    LPProvider -> AMM: Provide required token amount
    
    AMM -> Settlement: Process liquidity removal
    activate Settlement
    Settlement -> Pool: Remove liquidity
    Settlement -> Pool: Return collateral
    Settlement -> Pool: Add provided tokens
    Settlement --> AMM: Return base token + collateral
    deactivate Settlement
    
    AMM --> LPProvider: Send base token + collateral
    
    deactivate AMM
end

' Add a new flow for Trader swapping w-token for real token
group Trader Swaps W-Token for Token
    Trader -> AMM: Swap w-token for token (1:1)
    activate AMM
    
    AMM -> Settlement: Process w-token to token swap
    activate Settlement
    Settlement -> Pool: Burn w-token
    Settlement -> Pool: Transfer real token to trader
    Settlement --> AMM: Confirm swap completed
    deactivate Settlement
    
    AMM --> Trader: Send real token (1:1 ratio)
    
    deactivate AMM
end

' Add notes
note over AMM: Automated Market Maker for pre-market tokens
note over Pool: Contains base token (ETH, USDC, etc.) and w-token
note over Calculator: Implements the bonding curve formulas
note over Minter: Creates new w-token when liquidity is added
note over LPProvider: Provides liquidity with base token and price range (Pa to Pb)
note over Trader: Trades base token for w-token or vice versa
note over FeeManager: Tracks and manages fee collection for LP positions
note over FeeTrackers: Stores fee growth data for each price range
note over Settlement: Manages settlement phase after TGE
note over LPTrackers: Tracks LP positions, collateral and initial w-token amounts

@enduml 