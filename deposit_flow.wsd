@startuml Hermit System Architecture

' Define actors and components
actor "User" as user
rectangle "Hermit System" {
    component "Fund Contract" as fund
    component "Fund Manager" as fundManager
    component "Reward Manager" as rewardManager
    collections "Sub Accounts" as subAccounts
    component "Epoch Snapshot Manager" as snapshotManager
    database "Epoch Snapshots" as epochSnapshots
    
    ' Add total states
    database "Total Reward State" as totalReward
    database "User Balances State" as userBalances
}

rectangle "Scallop Protocol" {
    collections "Obligations" as obligations
    component "Lending Pool" as lendingPool
    component "Reward Pool" as rewardPool
}

' Define tokens and rewards
card "USDC" as usdc
card "sSUI" as ssui
card "sScallop" as sscallop

' Define relationships and flows
user -right-> fund : "1. Deposit USDC"
fund -[#red]-> userBalances : "Update user's balance\nafter deposit"
fund -down-> fundManager : "Forward funds"
fundManager -right-> subAccounts : "2. Split into equal amounts"
subAccounts -right-> obligations : "3. Create Obligations\n(USDC as collateral)"

obligations -[#blue]down-> lendingPool : "4. Borrow USDC"
rewardPool -[#green]-> obligations : "Earn Reward APR"

obligations -[#green]right-> rewardManager : "5. Epoch Harvest\n(sSUI + sScallop)"
rewardManager -[#red]down-> lendingPool : "6. Swap portion of rewards\nto maintain borrowed USDC amount"

' Add total reward update after harvest and swap
rewardManager -[#green]-> totalReward : "Update total reward\nafter harvest and swap"

' Add snapshot relationships
snapshotManager -[#purple]-> userBalances : "Read user balances\nat epoch end"
snapshotManager -[#purple]-> totalReward : "Read total rewards\nat epoch end"
snapshotManager -[#purple]-> epochSnapshots : "Store daily snapshots"

' Add notes
note bottom of fund : "Smart Contract holding user deposits"
note bottom of fundManager : "Manages fund distribution"
note bottom of rewardManager : "Manages reward harvesting, swapping\nand maintains reward balance"
note bottom of obligations : "Hermit owns these obligations"
note bottom of lendingPool : "Provides USDC lending"
note right of rewardPool : "Distributes sSUI and sScallop"
note right of totalReward : "Tracks accumulated rewards\nafter swap operations"
note right of userBalances : "Tracks individual user\ndeposit amounts"
note bottom of snapshotManager : "Takes daily snapshots of\nsystem state at epoch end"
note right of epochSnapshots : "Stores historical snapshots\nof balances and rewards"

' Style
skinparam rectangle {
    BackgroundColor LightBlue
    BorderColor Black
}

skinparam component {
    BackgroundColor LightGreen
    BorderColor Black
}

skinparam collections {
    BackgroundColor LightYellow
    BorderColor Black
}

skinparam card {
    BackgroundColor LightGray
    BorderColor Black
}

skinparam database {
    BackgroundColor LightPink
    BorderColor Black
}

' Arrow colors
skinparam arrow {
    Color Black
}

@enduml
